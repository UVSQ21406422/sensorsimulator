/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on 2009-okt-11, 20:33:25
 */
package userinterfaces;

import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import simulatordriver.SimulatorDriver;
import simulatorexception.SimulatorException;
import property.Property;
import simulatordriver.DriverStateListener;

/**
 *
 * @author chen
 */
public class MainFrame extends javax.swing.JFrame implements DriverStateListener {

    public static int windowwidth, windowheight;
    final JFileChooser fc = new JFileChooser();
    private AdvancedSettingsFrame advancedsetting;
    private AboutFrame aboutframe;
    private ProgressFrame progressframe;
    private SimulatorDriver simdriver;

    /** Creates new form MainFrame */
    public MainFrame() {
        try {
            simdriver = new SimulatorDriver(this);

        } catch (SimulatorException ex) {
            ex.printStackTrace();
        }
        initComponents();
        loadGeneralPropertiesToFrame();
        windowwidth = this.getToolkit().getScreenSize().width;
        windowheight = this.getToolkit().getScreenSize().height;
        this.setLocation((int) (windowwidth - this.getSize().getWidth()) / 2, (int) (windowheight - this.getSize().getHeight()) / 2);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        advanceButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sensorComboBox = new javax.swing.JComboBox();
        fileNameTextField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        timeStampRadioButton = new javax.swing.JRadioButton();
        frequencyRadioButton = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        timeStampComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        frequencyTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        startButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sensor Simulator");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Settings"));

        jButton1.setText("Reset");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        advanceButton.setText("Advance");
        advanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advanceButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Sensor:");

        jLabel2.setText("Source File:");

        jLabel3.setText("Transmit based on:");

        sensorComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "WiTilt" }));

        browseButton.setText("Browse");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(timeStampRadioButton);
        timeStampRadioButton.setText("Time Stamp");
        timeStampRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeStampRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(frequencyRadioButton);
        frequencyRadioButton.setText("Frequency");
        frequencyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frequencyRadioButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Time Stamp Position:");

        timeStampComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Beginning", "End", "None" }));

        jLabel5.setText("Frequency:");

        jLabel6.setText("Hz");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                        .addComponent(advanceButton)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(fileNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(browseButton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(timeStampRadioButton)
                                    .addComponent(timeStampComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(frequencyTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel6))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                                        .addComponent(frequencyRadioButton)
                                        .addGap(35, 35, 35))))
                            .addComponent(sensorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {advanceButton, browseButton});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(sensorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(timeStampRadioButton)
                    .addComponent(frequencyRadioButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frequencyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(timeStampComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(advanceButton)
                    .addComponent(jButton1)
                    .addComponent(saveButton)))
        );

        startButton.setText("Confirm");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 282, Short.MAX_VALUE)
                .addComponent(exitButton))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitButton)
                    .addComponent(startButton))
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Settings");

        jMenuItem3.setText("Advance Settings");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        jMenuItem4.setText("About");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setText("Manual");
        jMenu3.add(jMenuItem5);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void advanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advanceButtonActionPerformed
        advancedsetting = new AdvancedSettingsFrame(simdriver);
        advancedsetting.setVisible(true);
    }//GEN-LAST:event_advanceButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        simdriver.getWtPro().loadDefaultGeneral();
        loadGeneralPropertiesToFrame();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void timeStampRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeStampRadioButtonActionPerformed
        jLabel5.setEnabled(false);

        jLabel6.setEnabled(false);
        frequencyTextField.setEnabled(false);
    }//GEN-LAST:event_timeStampRadioButtonActionPerformed

    private void frequencyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frequencyRadioButtonActionPerformed

        jLabel5.setEnabled(true);
        jLabel6.setEnabled(true);
        frequencyTextField.setEnabled(true);
    }//GEN-LAST:event_frequencyRadioButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        fc.setDialogTitle("Choose source file");
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();

            String filePath = file.getPath();
            if (!filePath.endsWith(".txt")) {
                JOptionPane.showMessageDialog(this, "The file must be of type .txt", "Wrong format",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                fileNameTextField.setText(file.getAbsolutePath());
            }
        } else {
        }
    }//GEN-LAST:event_browseButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        fc.setDialogTitle("Choose source file");
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();

            String filePath = file.getPath();
            if (!filePath.endsWith(".txt")) {
                JOptionPane.showMessageDialog(this, "The file must be of type .txt", "Wrong format",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                fileNameTextField.setText(file.getAbsolutePath());
            }
        } else {
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        advancedsetting = new AdvancedSettingsFrame(simdriver);
        advancedsetting.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        aboutframe = new AboutFrame();
        aboutframe.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        progressframe = new ProgressFrame(this);
        progressframe.setVisible(true);
    }//GEN-LAST:event_startButtonActionPerformed

    public void startService() {
        try {
            simdriver.setGeneralProperties(getFilePath(), getTransMode(), getTimeStampPosition(), getFrequency(), getSensorType());
            simdriver.start();
        } catch (SimulatorException ex) {
            System.out.println(ex.getMessage());
            progressframe.updateState(ex.getMessage());
        }
    }

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            simdriver.setGeneralProperties(getFilePath(), getTransMode(), getTimeStampPosition(), getFrequency(), getSensorType());
        } catch (SimulatorException ex) {
            ex.printStackTrace();
        }
        simdriver.getWtPro().saveToFile();

        JOptionPane.showMessageDialog(this, "Properties saved.", "Saving completed", JOptionPane.OK_OPTION);

    }//GEN-LAST:event_saveButtonActionPerformed
    private String getFilePath() {
        return fileNameTextField.getText().trim();
    }

    private byte getTransMode() {
        return timeStampRadioButton.isSelected() ? Property.TransMode_TimeStamp : Property.TransMode_Frequency;
    }

    private byte getTimeStampPosition() {
        switch (timeStampComboBox.getSelectedIndex()) {
            case 0:
                return Property.TimeStampPosition_Begin;
            case 1:
                return Property.TimeStampPosition_End;
            case 2:
                return Property.TimeStampPosition_None;
            default:
                return 0;
        }

    }

    private int getFrequency() {
        if (!frequencyTextField.isEnabled()) {
            return -1;
        }
        int fre = 0;
        try {
            fre = Integer.parseInt(frequencyTextField.getText().trim());
        } catch (Exception e) {
            e.printStackTrace();
        }
        return fre;
    }

    private String getSensorType() {
        String type = "";
        if (sensorComboBox.getSelectedIndex() == 0) {
            type = Property.SensorType_WiTiltSensor;
        }
        return type;
    }

    private void loadGeneralPropertiesToFrame() {
        if (simdriver.getWtPro().getSensorType().equals(Property.SensorType_WiTiltSensor)) {
            sensorComboBox.setSelectedIndex(0);
        }

        fileNameTextField.setText(simdriver.getWtPro().getFilePath());
        frequencyTextField.setText(Integer.toString(simdriver.getWtPro().getFrequency()));

        if (simdriver.getWtPro().getTransMode() == Property.TransMode_TimeStamp) {
            timeStampRadioButton.setSelected(true);
            frequencyRadioButton.setSelected(false);
            frequencyTextField.setEnabled(false);
            jLabel5.setEnabled(false);
            jLabel6.setEnabled(false);
        } else if (simdriver.getWtPro().getTransMode() == Property.TransMode_Frequency) {
            timeStampRadioButton.setSelected(false);
            frequencyRadioButton.setSelected(true);
            frequencyTextField.setText(Integer.toString(simdriver.getWtPro().getTransFrequency()));
            jLabel5.setEnabled(true);
            jLabel6.setEnabled(true);
        }

        if (simdriver.getWtPro().getTimeStampPosition() == Property.TimeStampPosition_Begin) {
            timeStampComboBox.setSelectedIndex(0);
        } else if (simdriver.getWtPro().getTimeStampPosition() == Property.TimeStampPosition_End) {
            timeStampComboBox.setSelectedIndex(1);
        } else if (simdriver.getWtPro().getTimeStampPosition() == Property.TimeStampPosition_None) {
            timeStampComboBox.setSelectedIndex(2);
        }
    }

    public void stop() throws SimulatorException, IOException {
        simdriver.close();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton advanceButton;
    private javax.swing.JButton browseButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton exitButton;
    private javax.swing.JTextField fileNameTextField;
    private javax.swing.JRadioButton frequencyRadioButton;
    private javax.swing.JTextField frequencyTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox sensorComboBox;
    private javax.swing.JButton startButton;
    private javax.swing.JComboBox timeStampComboBox;
    private javax.swing.JRadioButton timeStampRadioButton;
    // End of variables declaration//GEN-END:variables

    public void transmitProgressEvent(double percent) {
        progressframe.updateProgress(percent);
    }

    public void systemInforEvent(String message) {
        progressframe.updateState(message);
    }
}
